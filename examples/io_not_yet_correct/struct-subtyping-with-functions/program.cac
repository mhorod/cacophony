foreign read_int: [] -> Int;
foreign write_int: [Int] -> Unit;

let f = [x: {a: Int, c: Int}] -> Unit => (
    write_int[x.a];
    write_int[x.c];
);
f[{a = 1, b = 2, c = 3}];
f[{a = 1, b = {f = true, g = 7}, c = 3, d = {}, e = 2}];

let g = [] -> {a: Int, b: {c: Int, d: Int}, e: Int} => {a = 1, b = {c = 3, d = 4}, e = 5};
let s1: {a: Int, e: Int} = g[];
let s2: {b: {c: Int}, e: Int} = g[];

write_int[s1.a];
write_int[s1.e];
write_int[s2.b.c];
write_int[s2.e];

let h = [] -> {a: Int} => return {b = 8, a = 9};
write_int[(h[]).a]; # h[].a should also be fine in the future

let u = [k: Int] -> {b: Int, x: {c: Int}, y: {}} => {a = k, b = k * 3, x = {c = k / 2, d = k + 1}, y = {e = 6}};
let s3 = u[10];

write_int[s3.b];
write_int[s3.x.c];
