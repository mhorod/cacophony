foreign get_current_heap_space: [] -> Int;
foreign cassert : [Bool] -> Unit;

let memoryLimit = 4 * 1024;

let ref1 = $1;
let ref2 = $1;
let ref3 = $1;
let ref4 = $1;
let ref5 = $1;
let ref6 = $1;
let ref7 = $1;
let ref8 = $1;

let i = 0;
while i < 1000000 do (
    cassert[(get_current_heap_space[] <= memoryLimit)];
    ref1 = $1;
    if i%4 == 0 then (ref2 = $1;);
    if i%4 == 1 then (ref3 = $1;);
    if i%10 == 3 then (
        let temp = ref4;
        ref4 = ref5;
        ref5 = temp;
    );
    if i%10 == 3 then (ref5 = $1;);
    if i%8 == 2 then (ref7=ref6;);
    if i%8 == 5 then (ref6 = $1;);
    if i%20 == 17 then (ref8 = $1;);
    i=i+1;
);

i = @ref1;
i = @ref2;
i = @ref3;
i = @ref4;
i = @ref5;
i = @ref6;
i = @ref7;
i = @ref8;